package Libraries.Development.Environment.Studio.Behaviors
use Libraries.Interface.Events.BehaviorEvent
use Libraries.Game.GameStateManager
use Libraries.Game.Game
use Libraries.Development.Environment.Studio.QuorumStudio
use Libraries.Development.Environment.Projects.ProjectTree
use Libraries.Interface.Selections.TreeSelection
use Libraries.Containers.Array
use Libraries.Interface.Controls.TreeItem
use Libraries.Development.Environment.Projects.ProjectTreeItem
use Libraries.System.File
use Libraries.Interface.Controls.OptionDialog
use Libraries.Interface.Behaviors.Controls.DeleteFileIfOkBehavior
use Libraries.Interface.Controls.Tree
use Libraries.Interface.Controls.Scenes.SceneTree
use Libraries.Interface.Controls.Scenes.SceneTreeItem
use Libraries.Interface.Controls.Scenes.SceneEditor
use Libraries.Interface.Item

class DeleteBehavior is QuorumStudioBehavior
    action Run(BehaviorEvent event)
        GameStateManager manager
        Game game = manager:GetGame()
        QuorumStudio studio = cast(QuorumStudio, game)
        Tree activeTree = studio:GetActiveTree()
        if activeTree = undefined
            return now
        end

        if activeTree:Equals(studio:GetProjectTree())
            ProjectTree tree = cast(ProjectTree, activeTree)
            Item focus = studio:GetFocus()
            Item parentItem = focus
            repeat until parentItem is ProjectTree
if parentItem = undefined
                return now
            end
                parentItem = parentItem:GetAccessibleParent()
            end
            
            TreeSelection selection = tree:GetSelection()
            if not selection:IsEmpty()
                TreeItem treeItem = selection:GetTreeItem()
                if treeItem is ProjectTreeItem
                    ProjectTreeItem item = cast(ProjectTreeItem, treeItem)
                    File file = item:GetFile()
                    if file not= undefined and file:IsFile()
                        OptionDialog dialog
                        dialog:SetName("Delete File Dialog")
                        DeleteFileIfOkBehavior behavior
                        behavior:SetFile(file)
                        behavior:SetItem(item)
                        behavior:SetDialog(dialog)
                        dialog:SetBehavior(behavior)
                        dialog:Show()
                        dialog:Focus()
                    end
                end
            end
        elseif activeTree:Equals(studio:GetSceneTree())
            SceneTree tree = cast(SceneTree, activeTree)
            TreeSelection selection = tree:GetSelection()
            if not selection:IsEmpty()
                SceneTreeItem treeItem = cast(SceneTreeItem, selection:GetTreeItem())
                SceneEditor controller = tree:GetSceneEditor()
                if treeItem:GetSceneItem() not= undefined
                    controller:Delete(treeItem:GetSceneItem())
                end
            end
        end
    end
end